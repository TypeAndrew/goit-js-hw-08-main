"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
<<<<<<< HEAD
exports.default = _wrapNativeSuper;
var _construct = _interopRequireDefault(require("./_construct"));
var _isNativeFunction = _interopRequireDefault(require("./_is_native_function"));
var _getPrototypeOf = _interopRequireDefault(require("./_get_prototype_of"));
var _setPrototypeOf = _interopRequireDefault(require("./_set_prototype_of"));
function _wrapNativeSuper(Class) {
    return wrapNativeSuper(Class);
}
=======
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: ()=>_wrapNativeSuper
});
const _constructMjs = /*#__PURE__*/ _interopRequireDefault(require("./_construct.js"));
const _isNativeFunctionMjs = /*#__PURE__*/ _interopRequireDefault(require("./_is_native_function.js"));
const _getPrototypeOfMjs = /*#__PURE__*/ _interopRequireDefault(require("./_get_prototype_of.js"));
const _setPrototypeOfMjs = /*#__PURE__*/ _interopRequireDefault(require("./_set_prototype_of.js"));
>>>>>>> a94f0e2c7b68095ebe300b600fdb0f28e18bba76
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
<<<<<<< HEAD
function wrapNativeSuper(Class1) {
    var _cache = typeof Map === "function" ? new Map() : undefined;
    wrapNativeSuper = function wrapNativeSuper(Class) {
        if (Class === null || !(0, _isNativeFunction).default(Class)) return Class;
=======
function wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;
    wrapNativeSuper = function wrapNativeSuper(Class) {
        if (Class === null || !(0, _isNativeFunctionMjs.default)(Class)) return Class;
>>>>>>> a94f0e2c7b68095ebe300b600fdb0f28e18bba76
        if (typeof Class !== "function") {
            throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
            if (_cache.has(Class)) return _cache.get(Class);
            _cache.set(Class, Wrapper);
        }
        function Wrapper() {
<<<<<<< HEAD
            return (0, _construct).default(Class, arguments, (0, _getPrototypeOf).default(this).constructor);
=======
            return (0, _constructMjs.default)(Class, arguments, (0, _getPrototypeOfMjs.default)(this).constructor);
>>>>>>> a94f0e2c7b68095ebe300b600fdb0f28e18bba76
        }
        Wrapper.prototype = Object.create(Class.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
<<<<<<< HEAD
        return (0, _setPrototypeOf).default(Wrapper, Class);
    };
    return wrapNativeSuper(Class1);
=======
        return (0, _setPrototypeOfMjs.default)(Wrapper, Class);
    };
    return wrapNativeSuper(Class);
}
function _wrapNativeSuper(Class) {
    return wrapNativeSuper(Class);
>>>>>>> a94f0e2c7b68095ebe300b600fdb0f28e18bba76
}
